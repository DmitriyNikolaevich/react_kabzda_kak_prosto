{"version":3,"sources":["hoc/withAuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/PostForm/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["withAuthRedirect","Component","this","props","isAuth","to","React","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","maxLenght","maxLenghtCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","requiredFild","placeholder","MyPosts","postData","console","log","post","addPostActionCreator","className","s","posts","postsItems","PureComponent","Post","item","src","alt","text","likes","MyPostsContainer","connect","state","profilePage","map","el","id","newPostText","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","ProfileInfo","user","ava","photos","small","Preloader","Profile","content","store","ProfileContainer","match","params","userID","auth","getUserThunk","getUserStatusThunk","updateUserStatusThunk","compose","userId","setUserProfile","withRouter"],"mappings":"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","file":"static/js/3.97aa30fd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return RedirectComponent;\r\n}\r\n\r\nexport default withAuthRedirect;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2AIYr\",\"ava\":\"Profile_ava__3JT0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__2dFYE\",\"posts\":\"MyPosts_posts__1Ajc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Z6ZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__3z7k8\",\"ava\":\"ProfileInfo_ava__1t0B8\"};","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLenghtCreator, requiredFild } from '../../../../utils/validators/validators';\r\nimport { Textarea } from '../../../common/FormControls/FormControls';\r\n\r\n\r\nconst maxLenght = maxLenghtCreator(10);\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"post\"} validate={[\r\n                    requiredFild, maxLenght\r\n                ]} placeholder=\"Required fild\" />\r\n            </div>\r\n\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({\r\n    form: 'post'\r\n})(PostForm)\r\n\r\nexport default PostReduxForm;","import React, { PureComponent } from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport PostReduxForm from './PostForm/PostForm';\r\n\r\n\r\nclass MyPosts extends PureComponent {\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return nextProps !== this.props || nextState !== this.state;\r\n    // };\r\n\r\n    onSubmit = (postData) => {\r\n        console.log(postData.post);\r\n        this.props.addPostActionCreator(postData.post);\r\n    }\r\n\r\n    render() {\r\n        console.log(\"Render\");\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h3>My Posts</h3>\r\n                </div>\r\n                <PostReduxForm onSubmit={this.onSubmit} />\r\n                <div className={s.posts}>\r\n                    {this.props.postsItems}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n            <div className={s.item}>\r\n                <div>\r\n                    <img src={props.src} alt=\"Alt text\" />\r\n                </div>\r\n                {props.text}\r\n                <div>\r\n                    Likes: {props.likes}\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profilePageReducer';\r\nimport MyPosts from './MyPosts';\r\nimport Post from './Post/Post';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsItems: state.profilePage.posts.map( el => <Post src={el.src} text={el.text} key={el.id} likes={el.likes} />),\r\n        value: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPostActionCreator})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(true);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(false);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(true);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChenge = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editMode\r\n                ? <div>\r\n                    <span onDoubleClick={activateEditMode} >{status || \"Введите статус\"}</span>\r\n                  </div>\r\n                : <div>\r\n                    <input autoFocus={true} onChange={onStatusChenge} value={status || ''} onBlur={ deactivateEditMode } />\r\n                  </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.user) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://img.fonwall.ru/o/1c/kosmos-planety-vselennaya-360z.jpg' alt=\"Alt text\" />\r\n            </div>\r\n            <div className={s.ava}>\r\n                <img src={props.user.photos.small} alt=\"Alt text\" /> + discription\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo user={props.user} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer store={props.store} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport s from './Profile.module.css';\r\nimport Profile from './Profile';\r\nimport { setUserProfile, getUserThunk, getUserStatusThunk, updateUserStatusThunk } from '../../redux/profilePageReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let user = this.props.match.params.userID ? this.props.match.params.userID : this.props.auth;\r\n        this.props.getUserThunk(user);\r\n        this.props.getUserStatusThunk(user);\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <div className={s.content}>\r\n            <Profile {...this.props} user={this.props.user} status={this.props.status} updateStatus={this.props.updateUserStatusThunk} />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        user: state.profilePage.user,\r\n        auth: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n        status: state.profilePage.status\r\n    }\r\n};\r\n\r\nexport default compose( connect(mapStateToProps, {setUserProfile, getUserThunk, getUserStatusThunk, updateUserStatusThunk}), withRouter, withAuthRedirect )(ProfileContainer); "],"sourceRoot":""}